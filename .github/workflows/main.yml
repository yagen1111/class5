name: Build, Push Docker & Deploy with Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action: apply or destroy'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ inputs.action == 'apply' || github.event_name == 'push' }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t yagen1111/mywebsite:latest .

      - name: Push Docker image
        run: docker push yagen1111/mywebsite:latest

  terraform-apply:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ inputs.action == 'apply' || github.event_name == 'push' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init -upgrade

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve

  terraform-destroy:
    runs-on: ubuntu-latest
    if: ${{ inputs.action == 'destroy' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Stop ECS Service
        run: aws ecs update-service --cluster my-app-cluster  --desired-count 0


      - name: Initialize Terraform
        run: terraform init -upgrade

      - name: Destroy Terraform Infrastructure
        run: terraform destroy -auto-approve
